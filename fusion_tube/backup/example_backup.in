## Example 1: Pour grains
# Code is adapted from https://github.com/lammps/lammps/blob/master/examples/pour/in.pour
# More command details in the documentation https://lammps.sandia.gov/doc/Commands.html
# tell LAMMPS we are simulating finite-size particles, which has default density=1 and diameter=1
atom_style sphere

# the simulation is periodic (p) in x and y, and fixed (f) in z direction
boundary p p f
newton off
comm_modify vel yes

# define a rectangular region named ‘reg’ with span [-3,3]*[-2,2]*[0,9] in x,y and z
region reg block -3 3 -2 2 0 9 units box

# create simulation domain using the region ‘reg’ and specify 1 particle type
create_box 1 reg

# set neighbor skin distance to 0.2 for all spheres. Spheres those are close enough (≤0.2) are stored in the neighbor list
neighbor 0.2 bin

# this command ensures the neighbor list is checked every step of integration for new neighbors
neigh_modify delay 0

# Particle interaction: Hertzian contact, modulus=200.0, damping=5.0, history-dependent friction with coefficient 0.5
pair_style gran/hertz/history 200.0 200.0 5.0 5.0 0.5 1
pair_coeff * *

# the time of each integration step is dt=0.01 while the unit of time is 1 by default.
timestep 0.01

# define constant number/volumn/energy integration for sphere, i.e. F=ma
# the name of this command is called ‘1’ and it is applied to all particles.
fix 1 all nve/sphere

# add gravity of magnitude 1.0 and in -z direction to all particles, command name is ‘2’
fix 2 all gravity 1.0 spherical 0.0 -180.0

# define a rectangular region named ‘reg2’ with span [-3,3]*[-2,2]*[0,9] in x,y and z
# the ‘open 6’ removes the top face (+z face) of the box, so it is open to hold particles
region reg2 block -3 3 -2 2 0 9 units box open 6

# define a wall to interact with particles using predefined region ‘reg2’
# The force law of the wall is specified in the same way as particle interaction. Command name is ‘3’
fix 3 all wall/gran/region hertz/history 200.0 200.0 5.0 5.0 0.5 1 region reg2
region reg3 block -2.0 2.0 -1.0 1.0 3.0 8.0 units box

# Pour particles randomly. It pours 60 particles of one type (type 1). Random seed=1 (positive integer). Volume fraction
# of the pouring 0.13, and it tries upto 50 times for each particle to be inserted without overlapping with existing particles.
# Particles are insert in ‘reg3’, and the initial velocity is 0≤Vx≤0, 0≤Vy≤0 and Vz=-3. The command name is ‘ins’.
fix ins all pour 60 1 1 vol 0.13 50 region reg3 vel 0 0 0 0 -3

# calculate total kinetic energy due to translation over all particles, computation name is ‘1’
compute 1 all ke

# calculate total kinetic energy due to rotation over all particles, computation name is ‘2’
compute 2 all erotate/sphere

# specify run-time output items: integration step, number of particles, the value of computation ‘1’ and ‘2’
thermo_style custom step atoms c_1 c_2

# output these items every 100 step
thermo 100

# display a warning it particle is lost (e.g. move out of a fixed simulation box)
# do not normalize extensive values (such as ‘1’ and ‘2’) by the number of particles
thermo_modify lost warn norm no

# output a snapshot (image) of the simulation every 50 step. The output image name is pour_*.jpg, where * is the
# current simulation step. Zoom the view by a factor of 1.8
# particle color follows particle type. In this case, all particles are of type 1, and the color of type 1 is red by default.
# drawing particle diameter follows physical particle diameter. In this case, all particles have diameter 1.
dump 1 all custom 50 pour_.* x y z radius
dump 2 all image 50 pour_*.jpg type diameter zoom 1.8

# last command: integrate the equation of motion (F=ma) for 1500 step
run 1500
